#image: node:17-alpine
workflow:
  rules:
    - if: '$CI_COMMIT_BRANCH != "main" && $CI_PIPELINE_SOURCE != "merge_request_event"'
      when: never
    - when: always
stages:
  - testing
  - build_images
  - push_image
  - deploy
variables:
    image_repo: docker.io/my-docker-id/myapp
    image_tag: v1.2

run_int_tests:
  tags:
    - ec2
    - aws
    - remote
  stage: testing
  before_script:
    - echo 'Preparing int test data'
  script:
    - echo 'Running tests...'
  after_script:
    - echo 'Cleaning the temp files'

run_unit_tests:
  tags:
    - ec2
    - aws
    - remote
  stage: testing
  before_script:
    - echo 'Preparing unit test data'
  script:
    - echo 'Running tests...'
  after_script:
    - echo 'Cleaning the temp files'

build_images:
  tags:
    - ec2
    - aws
    - remote
  only:
    - main
  stage: build_images
  script:
    - echo 'Building the docker image'
    - echo 'Tagging the docker image $image_repo:image_tag'

push_image:
  tags:
    - ec2
    - aws
    - remote
  only:
    - main
  stage: build_images
  needs:
     - build_images
  script:
    - echo 'Logging into docker image'
    - echo 'Pushing image $image_repo:image_tag to docker registry'

deploy_image:
   tags:
    - ec2
    - aws
    - remote
   only:
     - main
   stage: deploy
   script:
      - echo 'image successfully deployed  $image_repo:image_tag to dev server'